{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["quoteArr","quote","author","Quotes","props","state","index","Math","floor","random","handleClick","bind","strict","this","setState","a","diffQuote","id","onClick","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAGMA,G,MAAW,CACC,CACEC,MAAM,kGACNC,OAAO,oBAET,CACED,MAAM,4DACNC,OAAO,mBAET,CACED,MAAM,sDACNC,OAAO,sBAET,CACED,MAAM,2GACNC,OAAO,kBAET,CACED,MAAM,iEACNC,OAAO,oBAET,CACED,MAAM,2CACNC,OAAO,iBAET,CACED,MAAM,iFACNC,OAAO,2BAET,CACED,MAAM,6CACNC,OAAO,sBAET,CACED,MAAM,sFACNC,OAAO,iBAET,CACED,MAAM,6EACNC,OAAO,wBAyCZC,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAOC,KAAKC,MAAuB,GAAhBD,KAAKE,WAE1B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALF,E,0DASjB,IAAIC,EAASC,KAAKR,MAAMC,MASxBO,KAAKC,SAAS,CACZR,MATF,WAEE,IADA,IAAIS,EAAIR,KAAKC,MAAuB,GAAhBD,KAAKE,UAClBM,IAAMH,GACXG,EAAIR,KAAKC,MAAuB,GAAhBD,KAAKE,UAEvB,OAAOM,EAIAC,O,+BAKT,OACA,6BACE,uBAAGC,GAAG,QAAQjB,EAASa,KAAKR,MAAMC,OAAOL,OACzC,uBAAGgB,GAAG,UAAUjB,EAASa,KAAKR,MAAMC,OAAOJ,QAC3C,4BAAQgB,QAASL,KAAKH,YAAaO,GAAG,aAAtC,aACA,uBAAGE,KAAK,uCAAuCF,GAAG,eAAlD,c,GA9BeG,IAAMC,WCnCPC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,cDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.850fd948.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst quoteArr = [\n                  {\n                    quote:'Two things are infinite: the universe and human stupidity; and I\\'m not sure about the universe.',\n                    author:'-Albert Einstein'\n                  },\n                  {\n                    quote:'An eye for eye only ends up making the whole world blind.',\n                    author:'-Mahatma Gandhi'\n                  },\n                  {\n                    quote:'The main thing is to make history, not to write it.',\n                    author:'-Otto Von Bismarck'\n                  },\n                  {\n                    quote:'This creature softened my heart of stone. She died and with her died my last warm feelings for humanity.',\n                    author:'-Joseph Stalin'\n                  },\n                  {\n                    quote:'Be sure you put your feet in the right place, then stand firm.',\n                    author:'-Abraham Lincoln'\n                  },\n                  {\n                    quote:'It\\'s not bragging if you can back it up.',\n                    author:'-Muhammad Ali',\n                  },\n                  {\n                    quote:'Life\\'s most persistent and urgent question is, \\'What are you doing for others?',\n                    author:'-Martin Luther King Jr.'\n                  },\n                  {\n                    quote:'Simplicity is the ultimate sophistication.',\n                    author:'-Leonardo da Vinci'\n                  },\n                  {\n                    quote:'If I have seen further than others, it is by standing upon the shoulders of giants.',\n                    author:'-Isaac Newton'\n                  },\n                  {\n                    quote:'Success is never found. Failure is never fatal. Courage is the only thing.',\n                    author:'-Winston Churchill'\n                  }\n                 ];\n//An array containing objects with quote and author properties\n\nclass Quotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: Math.floor((Math.random() * 10))\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    let strict = this.state.index;\n    function diffQuote() {\n      let a = Math.floor((Math.random() * 10));\n      while (a === strict) {\n        a = Math.floor((Math.random() * 10));\n      }\n      return a;\n    }\n    //diffQuote makes sure that we don't get the same quote twice in a row\n    this.setState({\n      index: diffQuote()\n    });\n  }\n\n  render() {\n    return (\n    <div>\n      <p id=\"text\">{quoteArr[this.state.index].quote}</p>\n      <p id=\"author\">{quoteArr[this.state.index].author}</p>\n      <button onClick={this.handleClick} id=\"new-quote\">New quote</button>\n      <a href=\"https://www.twitter.com/intent/tweet\" id=\"tweet-quote\">Tweet</a>\n    </div>\n    );\n  }\n}\n\nexport default Quotes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('quote-box')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}